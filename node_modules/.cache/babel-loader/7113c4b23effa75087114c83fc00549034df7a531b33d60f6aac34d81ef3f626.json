{"ast":null,"code":"var _jsxFileName = \"/Users/akshaykumar/Desktop/projects/React/netflixgpt/src/components/VideoBackground.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { url_header } from \"../utils/url_header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoBackground = () => {\n  _s();\n  const movies = async () => {\n    const data = await fetch('https://api.themoviedb.org/3/movie/1096197?language=en-US', url_header);\n    const json = await data.json();\n    const res = !json ? null : json.results;\n    json.filter(item => item.video == true);\n    console.log(json);\n    //dispatch(addNowPlayingMovie(res))\n  };\n  useEffect(() => {\n    movies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoBackground, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = VideoBackground;\nexport default VideoBackground;\nvar _c;\n$RefreshReg$(_c, \"VideoBackground\");","map":{"version":3,"names":["useEffect","url_header","jsxDEV","_jsxDEV","VideoBackground","_s","movies","data","fetch","json","res","results","filter","item","video","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akshaykumar/Desktop/projects/React/netflixgpt/src/components/VideoBackground.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { url_header } from \"../utils/url_header\";\n\nconst VideoBackground = () =>{\n    const movies = async () =>{\n        const data = await fetch('https://api.themoviedb.org/3/movie/1096197?language=en-US', url_header)\n        const json = await data.json();\n        const res = (!json) ? null : json.results;\n        json.filter(item=>item.video == true);\n        console.log(json);\n        //dispatch(addNowPlayingMovie(res))\n    }\n    useEffect(()=>{movies()},[]);\n    return(\n        <div>\n            \n        </div>\n    )\n}\nexport default VideoBackground;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,UAAU,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,eAAe,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACzB,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAW;IACtB,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,2DAA2D,EAAEP,UAAU,CAAC;IACjG,MAAMQ,IAAI,GAAG,MAAMF,IAAI,CAACE,IAAI,CAAC,CAAC;IAC9B,MAAMC,GAAG,GAAI,CAACD,IAAI,GAAI,IAAI,GAAGA,IAAI,CAACE,OAAO;IACzCF,IAAI,CAACG,MAAM,CAACC,IAAI,IAAEA,IAAI,CAACC,KAAK,IAAI,IAAI,CAAC;IACrCC,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;IACjB;EACJ,CAAC;EACDT,SAAS,CAAC,MAAI;IAACM,MAAM,CAAC,CAAC;EAAA,CAAC,EAAC,EAAE,CAAC;EAC5B,oBACIH,OAAA;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEd,CAAC;AAAAf,EAAA,CAfKD,eAAe;AAAAiB,EAAA,GAAfjB,eAAe;AAgBrB,eAAeA,eAAe;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}