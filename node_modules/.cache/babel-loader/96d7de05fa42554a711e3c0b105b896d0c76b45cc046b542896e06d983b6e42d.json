{"ast":null,"code":"import React,{useEffect}from'react';import Login from'./Login';import Browse from'./Browse';import{RouterProvider,createBrowserRouter}from'react-router-dom';import{onAuthStateChanged}from'firebase/auth';import{useDispatch}from'react-redux';import{addUser,deleteUser}from'../utils/userSlice';import{auth}from'../utils/firebase';import{jsx as _jsx}from\"react/jsx-runtime\";const Body=()=>{const dispatch=useDispatch();const appRouter=createBrowserRouter([{path:\"/\",element:/*#__PURE__*/_jsx(Login,{})},{path:\"/browse\",element:/*#__PURE__*/_jsx(Browse,{})}]);useEffect(()=>{onAuthStateChanged(auth,user=>{if(user){const{uid,email,displayName,photoURL}=user;dispatch(addUser({uid:uid,email:email,displayName:displayName,photoURL:photoURL}));}else{dispatch(deleteUser());}});},[]);return/*#__PURE__*/_jsx(RouterProvider,{router:appRouter});};export default Body;","map":{"version":3,"names":["React","useEffect","Login","Browse","RouterProvider","createBrowserRouter","onAuthStateChanged","useDispatch","addUser","deleteUser","auth","jsx","_jsx","Body","dispatch","appRouter","path","element","user","uid","email","displayName","photoURL","router"],"sources":["/Users/akshaykumar/Desktop/projects/React/netflixgpt/src/components/Body.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport Login from './Login'\r\nimport Browse from './Browse'\r\nimport {RouterProvider, createBrowserRouter} from 'react-router-dom'\r\nimport { onAuthStateChanged } from 'firebase/auth'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addUser, deleteUser } from '../utils/userSlice'\r\nimport { auth } from '../utils/firebase'\r\n\r\nconst Body = () => {\r\n    const dispatch = useDispatch();\r\n    const appRouter = createBrowserRouter([\r\n        {\r\n            path:\"/\",\r\n            element:<Login/>\r\n        },\r\n        {\r\n            path:\"/browse\",\r\n            element:<Browse/>\r\n        }\r\n    ])\r\n\r\n    useEffect(()=>{\r\n      onAuthStateChanged(auth,(user)=>{\r\n        if(user){\r\n          const {uid, email,displayName,photoURL} = user;\r\n          dispatch(addUser({uid:uid,email:email,displayName:displayName,photoURL:photoURL}))\r\n        }\r\n        else{\r\n          dispatch(deleteUser());\r\n        }\r\n      })\r\n    },[]);\r\n\r\n  return (\r\n    <RouterProvider router={appRouter}/>\r\n  )\r\n}\r\n\r\nexport default Body"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,OAAQC,cAAc,CAAEC,mBAAmB,KAAO,kBAAkB,CACpE,OAASC,kBAAkB,KAAQ,eAAe,CAClD,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,OAAO,CAAEC,UAAU,KAAQ,oBAAoB,CACxD,OAASC,IAAI,KAAQ,mBAAmB,QAAAC,GAAA,IAAAC,IAAA,yBAExC,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CACf,KAAM,CAAAC,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAQ,SAAS,CAAGV,mBAAmB,CAAC,CAClC,CACIW,IAAI,CAAC,GAAG,CACRC,OAAO,cAACL,IAAA,CAACV,KAAK,GAAC,CACnB,CAAC,CACD,CACIc,IAAI,CAAC,SAAS,CACdC,OAAO,cAACL,IAAA,CAACT,MAAM,GAAC,CACpB,CAAC,CACJ,CAAC,CAEFF,SAAS,CAAC,IAAI,CACZK,kBAAkB,CAACI,IAAI,CAAEQ,IAAI,EAAG,CAC9B,GAAGA,IAAI,CAAC,CACN,KAAM,CAACC,GAAG,CAAEC,KAAK,CAACC,WAAW,CAACC,QAAQ,CAAC,CAAGJ,IAAI,CAC9CJ,QAAQ,CAACN,OAAO,CAAC,CAACW,GAAG,CAACA,GAAG,CAACC,KAAK,CAACA,KAAK,CAACC,WAAW,CAACA,WAAW,CAACC,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,CACpF,CAAC,IACG,CACFR,QAAQ,CAACL,UAAU,CAAC,CAAC,CAAC,CACxB,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,EAAE,CAAC,CAEP,mBACEG,IAAA,CAACR,cAAc,EAACmB,MAAM,CAAER,SAAU,CAAC,CAAC,CAExC,CAAC,CAED,cAAe,CAAAF,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}